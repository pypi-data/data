# On every push this script is executed
on:
  workflow_dispatch:
  push:
    branches:
      - main

#concurrency: data

name: Build data
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install root
        run: poetry install --only-root

      - name: Generate token
        id: generate_token
        uses: pypi-data/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        id: groups
        run: |
          mkdir output/
          poetry run pypi-data group-index-urls output/
          echo "matrix=$(cat output/groups.json)" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v3
        with:
          name: groups
          path: output/groups/
          retention-days: 1

      - uses: ncipollo/release-action@v1
        with:
          draft: true
          name: latest
          tag: latest
          commit: ${{ github.sha }

#      - name: Publish
#        uses: softprops/action-gh-release@v1
#        with:
#          draft: false
#          name: "Latest Data"
#          tag_name: "latest"
#          files: 'compact/*'


    outputs:
      matrix: ${{ steps.groups.outputs.matrix }}

  combine:
    needs: [generate-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        index: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: groups
      - run: echo ${{ matrix.index }}
      - run: ls -R
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: latest
          tag: latest
          commit: ${{ github.sha }
          omitNameDuringUpdate: true
          omitDraftDuringUpdate: true
          omitBodyDuringUpdate: true
          artifacts: ${{ matrix.index }}


##      - name: Download
##        run: |
##          mkdir data/
##          wget --no-verbose -i index-urls.txt -P data/
#
#      - name: Compact
#        run: |
#          poetry run pypi-data compact-indexes
#        env:
#          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
#
##      - name: Publish
##        uses: softprops/action-gh-release@v1
##        with:
##          draft: false
##          name: "Latest Data"
##          tag_name: "latest"
##          files: 'compact/*'
