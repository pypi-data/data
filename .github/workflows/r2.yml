on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 5 * * *"

#concurrency: data

name: Repack
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: count lines
        id: matrix
        run: |
          limit=7
          lines=$(wc -l links/repositories.txt | awk '{print $1}')
          job_matrix=$(echo $lines | jq -cr "[range(0;.;$limit)]")
          echo $job_matrix
          echo "matrix=$job_matrix" >> "$GITHUB_OUTPUT"
          echo "limit=$limit" >> "$GITHUB_OUTPUT"

    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      limit: ${{ steps.matrix.outputs.limit }}

  copy:
    timeout-minutes: 600
    runs-on: ubuntu-latest
    needs: [generate-matrix]
    strategy:
      fail-fast: true
      matrix:
        index: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Clone and push repositories
        run: |
          start_index=$(expr ${{ matrix.index }} + 1)
          limit=${{needs.generate-matrix.outputs.limit}}
          end_index=$(expr ${{ matrix.index }} + $limit)
          lines="$(head -n $end_index links/repositories.txt | tail -n $limit)"
          file_prefix="$start_index-$end_index"
          
          echo "************"
          echo "Uploading: $lines"
          echo "Start index: $start_index"
          echo "End index: $end_index"
          echo "Limit: $limit"
          echo "File prefix: $file_prefix"
          echo "************"
          
          git init checkout/
          
          for repo in $lines; do
            git -C checkout/ remote add $(basename "$repo") "$repo"
          done;
          
          git -C checkout/ fetch --multiple --depth=1 --jobs=4 --progress --all
          
          echo "Repacking"
          
          print_stats() {
            while :
            do 
              # Get the current usage of CPU and memory
              cpuUsage=$(top -bn1 | awk '/Cpu/ { print $2}')
              memUsage=$(free -m | awk '/Mem/{print $3}')
            
              # Print the usage
              echo "CPU Usage: $cpuUsage%"
              echo "Memory Usage: $memUsage MB"
             
              # Sleep for 1 second
              sleep 1
            done
          }
          
          print_stats &
          STATS_PID=$!
          
          git -C checkout/ repack -a -d -f --depth=200 --window=600 --threads=2 --window-memory=3g
          
          for file in checkout/.git/objects/pack/*; do
            extension="${file##*.}"
            mv "$file" "checkout/.git/objects/pack/$file_prefix.$extension"
          done
          
          git -C checkout/ rev-list --all --objects | gzip > "checkout/.git/objects/pack/$file_prefix.objects.gz"
          aws s3 sync checkout/.git/objects/pack/ s3://pypi-data/packfiles-2/ --region=auto --endpoint-url ${{secrets.ENDPOINT}} --no-progress
          
          kill $STATS_PID
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
